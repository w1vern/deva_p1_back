"""first migration

Revision ID: c34d8889debb
Revises: 
Create Date: 2025-04-24 06:24:03.166691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c34d8889debb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('secret', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('files',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('metadata_is_hide', sa.Boolean(), nullable=True),
    sa.Column('metadata_timecode', sa.Float(), nullable=True),
    sa.Column('metadata_text', sa.String(), nullable=True),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_id', initially='DEFERRED', deferrable=True, use_alter=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='file_metadata_id', initially='DEFERRED', deferrable=True, use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('start_time_code', sa.Float(), nullable=False),
    sa.Column('end_time_code', sa.Float(), nullable=False),
    sa.Column('file_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('holder_id', sa.Uuid(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('origin_file_id', sa.Uuid(), nullable=True),
    sa.Column('transcription_id', sa.Uuid(), nullable=True),
    sa.Column('summary_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['holder_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['origin_file_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['summary_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['transcription_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invited_users',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('done', sa.Boolean(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('prompt', sa.String(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('origin_task_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['origin_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('invited_users')
    op.drop_table('projects')
    op.drop_table('notes')
    op.drop_table('files')
    op.drop_table('users')
    # ### end Alembic commands ###
